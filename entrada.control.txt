/*
	Control Test
	PLD 16/17
*/

// Global variables
int integer;
char character;
double real;

int MATRIXSIZE;
int[10][10] matrix;

// Functions
void setValue(int row, int columnn, int value){
	if (row >= 0 && row < MATRIXSIZE && columnn >= 0 && columnn < MATRIXSIZE) {
		matrix[row][column] = value;
	}
}
int getValue(int row, int columnn) {
	if ((row < 0 || row >= MATRIXSIZE) || (columnn < 0 && columnn >= MATRIXSIZE)){
		return -1;
	}
	else{	
		return matrix[row][column];
	}
}
void fill(int value) {
	int i,j;  // Multiple variable definition
	i = 0;	
	while (i < MATRIXSIZE) {
		j = 0;
		while (j < MATRIXSIZE) {
			setValue(i,j, value);
			j = j + 1;
		}
		i = i + 1;
	}
}
void show() {
	int i,j;
	i = 0;	
	write '[','\n';
	while (i < MATRIXSIZE) {
		j = 0;
		write '\t','[';
		while (j < MATRIXSIZE) {
			write getValue(i,j);
			if (j != MATRIXSIZE - 1) {
				write ',';
			}
			j = j + 1;
		}
		write ']','\n';	
		i = i + 1;
	}	
	write ']';	
}

// Record
struct { 
	int day, mounth, year;	
} date;

// Main program
//void nomain (){ // Uncomment to test
void main() { // Uncomment to test
	char[1][2][3] characters;
	MATRIXSIZE = 10;
	fill(1);
	setValue(5,5,5);
	integer = getValue(5,5);
	if (integer == 5) { // Uncomment { to test
		write 'O','k','\n';
	}
	else {
		write 'E','r','r','o','r','\n';
	}
	show();
	
	date.day = 9;
	date.mounth = 3;
	date.year = 2016;
	
	character = (char)date.day;
	real = 4.5 + 4. * 3e+3 - 5.4E-3;
	
	//int error; // Uncomment to test
}

// void no_function(){} // Uncomment to test